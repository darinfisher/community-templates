[agent]

  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 1000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = false
  
# Outputs

[[outputs.influxdb_v2]]

  urls = ["$INFLUX_HOST"]
  # urls = ["https://enb37b16zawnc.x.pipedream.net"]
  token = "$INFLUX_TOKEN"
  organization = "$INFLUX_ORG"
  bucket = "$INFLUX_BUCKET"

# [[outputs.file]]


# Inputs

# [[inputs.kafka_consumer]]
#   brokers = ["localhost:9092"]
#   topics = ["telegraf"]

[[inputs.jolokia2_agent]]
  default_tag_prefix = ""
  default_field_prefix = ""
  default_field_separator = "_"
  urls = ["http://localhost:8778/jolokia"]

  # (still have to add Type=DelayedOperationPurgatory)
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_replica_manager"
    mbean        = "kafka.server:type=ReplicaManager,name=*"
    paths        = ["Count"]
    field_name = "$1"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_replica_manager"
    mbean        = "kafka.server:type=ReplicaManager,name=PartitionCount"
    field_name   = "PartitionCount"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_replica_manager"
    mbean        = "kafka.server:type=ReplicaManager,name=LeaderCount"
    field_name   = "LeaderCount"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_replica_manager"
    mbean        = "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
    field_name   = "UnderReplicatedPartitions"

  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_broker"
    mbean        = "kafka.server:type=kafka-metrics-count"
    field_name   = "kafka_metrics_count"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_broker"
    mbean        = "kafka.server:type=BrokerTopicMetrics,name=*"
    field_name   = "kafka_metrics_count"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_broker"
    mbean        = "kafka.server:type=DelayedOperationPurgatory,name=NumDelayedOperations,delayedOperation=*"
    field_name   = "$1"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_broker"
    mbean        = "kafka.server:type=Produce"
    field_name   = "ProduceQueueSize"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_topics"
    mbean        = "kafka.server:type=BrokerTopicMetrics,name=*,topic=*"
    paths        = ["Count"]
    field_name   = "$1"
    tag_keys     = ["topic"]
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_controller"
    mbean        = "kafka.controller:type=KafkaController,name=*"
    field_name   = "$1"

  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_network"
    mbean        = "kafka.network:type=RequestMetrics,name=ErrorsPerSec,request=*,error=*"
    paths        = ["Count"]
    tag_keys     = ["request"]
    field_name   = "$2"

  # from kafka.network
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_requests"
    mbean        = "kafka.network:type=RequestMetrics,name=RequestBytes,request=*"
    tag_keys     = ["request"]
    field_prefix = "Bytes"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_requests"
    mbean        = "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=*"
    tag_keys     = ["request"]
    field_prefix = "QueueTime"
  [[inputs.jolokia2_agent.metric]]
    name         = "kafka_requests"
    mbean        = "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=*,version=*"
    tag_keys     = ["request"]
    paths        = ["Count"]
    field_name   = "Count"

  # [[inputs.jolokia2_agent.metric]]
  #   name         = "kafka_controller"
  #   mbean        = "kafka.controller:type=KafkaController,name=*"


  [[inputs.jolokia2_agent.metric]]
    name       = "kafka_partition"
    mbean      = "kafka.log:name=*,partition=*,topic=*,type=Log"
    field_name = "$1"
    tag_keys   = ["topic", "partition"]
  [[inputs.jolokia2_agent.metric]]
    name       = "kafka_partition"
    mbean      = "kafka.cluster:name=UnderReplicated,partition=*,topic=*,type=Partition"
    field_name = "UnderReplicatedPartitions"
    tag_keys   = ["topic"]

[[inputs.zookeeper]]

  # servers = ["$ZOOKEEPER_CONNECTION_STRING"]

  ## Timeout for metric collections from all servers.  Minimum timeout is "1s".
  # timeout = "5s"

  ## Optional TLS Config
  # enable_tls = true
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## If false, skip chain & host verification
  # insecure_skip_verify = true
